/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 * Ref:
 * - https://precondition.github.io/home-row-mods#home-row-mods-order
 * - https://www.reddit.com/r/ErgoMechKeyboards/comments/11gejh3/lpt_try_urobs_zmk_timeless_homerow_mods_combos/
 * - https://github.com/urob/zmk-config
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define SYM_NUM 1
#define VIM 3

// home-row mod timing config
#define HRM_TAPPING_TERM 300
#define HRM_TAPPING_TERM_FAST 200
#define HRM_QUICK_TAP 175
#define HRM_PRIOR_IDLE 150

// key positions
#define KEYS_L 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29
#define KEYS_R 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35
#define KEYS_T 36 37 38 39 40 41

/ {
    combos {
        compatible = "zmk,combos";

        combo_caps_word {
            key-positions = <15 20>;
            bindings = <&caps_word>;

            // bindings = <&kt LSHIFT>; // is this basically just caps lock?
        };
    };

    behaviors {
        sticky_layer_tap: sticky_layer_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "STICKY_LAYER_TAP";
            bindings = <&sl>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        layer2_caps_word: layer2_caps_word {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER2_CAPS_WORD";
            #binding-cells = <0>;
            bindings = <&mo 2>, <&caps_word>;
        };

        hrm_l: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HRM_TAPPING_TERM>;
            quick-tap-ms = <HRM_QUICK_TAP>;
            require-prior-idle-ms = <HRM_PRIOR_IDLE>;
            hold-trigger-key-positions = <KEYS_R KEYS_T>;
            hold-trigger-on-release;
        };

        hrm_r: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HRM_TAPPING_TERM>;
            quick-tap-ms = <HRM_QUICK_TAP>;
            require-prior-idle-ms = <HRM_PRIOR_IDLE>;
            hold-trigger-key-positions = <KEYS_L KEYS_T>;
            hold-trigger-on-release;
        };
    };

    macros {
        php_arrow: php_arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp GT>;
            label = "PHP_ARROW";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Base";
            // -----------------------------------------------------------------------------------------
            // | TAB  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  | BKSP |
            // | ESC  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J  |  K  |  L  |  ;  |  '   |
            // | ???? |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,  |  .  |  /  | RET  |
            //                    | CMD | LWR | ??? |   | SPC | RSE | ALT |

            bindings = <
&kp TAB  &kp Q                  &kp W            &kp E              &kp R                &kp T            &kp Y      &kp U              &kp I            &kp O       &kp P          &kp BSPC
&kp ESC  &hrm_l LEFT_GUI A        &hrm_l LEFT_ALT S  &hrm_l LEFT_SHIFT D  &hrm_l LEFT_CONTROL F  &lt 1 G          &lt 1 H    &hrm_r RCTRL J        &hrm_r RSHIFT K     &hrm_r RALT L  &hrm_r RGUI SEMI  &kp SQT
&sl 1    &sticky_layer_tap 4 Z  &kp X            &kp C              &kp V                &kp B            &kp N      &kp M              &kp COMMA        &kp DOT     &kp FSLH       &kp RET
                                                 &kp LCMD           &mo 1                &mt F20 ENTER    &kp SPACE  &layer2_caps_word  &lt 3 BACKSPACE
            >;
        };

        num_sym {
            display-name = "Num";
            // -----------------------------------------------------------------------------------------
            // |   |     |     |     |     |     |   |     |     |     |     |     | BKSP |
            // | ` |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |      |
            // |   |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    |    | SHFT | GUI |   | GUI | SHFT |    |

            bindings = <
&trans     &none        &none   &none          &none     &none       &php_arrow  &kp MINUS  &kp EQUAL           &none   &none        &kp DEL
&kp GRAVE  &mt LGUI N1  &kp N2  &mt LSHIFT N3  &kp N4    &kp N5      &kp N6      &kp N7     &mt RIGHT_SHIFT N8  &kp N9  &mt RGUI N0  &kp BSLH
&none      &none        &none   &kp LBRC       &kp LPAR  &kp LBKT    &kp RBKT    &kp RPAR   &kp RBRC            &none   &none        &ext_power EP_TOG
                                &trans         &trans    &trans      &trans      &trans     &kp DELETE
            >;
        };

        nav {
            display-name = "Nav";
            bindings = <
&none   &none   &none   &none   &none   &none    &none     &none     &none   &none      &none  &none
&trans  &trans  &trans  &trans  &trans  &none    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &none  &none
&none   &none   &none   &none   &none   &none    &none     &none     &none   &none      &none  &none
                        &none   &none   &none    &none     &none     &none
            >;
        };

        media {
            display-name = "Media";
            bindings = <
&none  &none  &none  &none  &none  &none    &none             &none         &none         &none       &none  &none
&none  &none  &none  &none  &none  &none    &kp C_PREV        &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT  &none  &none
&none  &none  &none  &none  &none  &none    &none             &none         &none         &none       &none  &none
                     &none  &none  &none    &kp C_PLAY_PAUSE  &kp K_MUTE    &none
            >;
        };

        no_hrm {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp H   &kp J   &kp K   &kp L   &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};

// vi: ft=dts

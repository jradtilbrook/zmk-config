#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        php_arrow: php_arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp GT>;
            label = "PHP_ARROW";
        };

        php_array: php_array {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GT>;
            label = "PHP_ARRAY";
        };

        emoji_react: emoji_react {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp PLUS &kp COLON>;
            label = "EMOJI_REACT";
        };
    };

    behaviors {
        bspc_del: bspc_del {
            compatible = "zmk,behavior-mod-morph";
            label = "BSPC_DEL";
            bindings = <&kp BACKSPACE>, <&kp DEL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // ---------------------------------------------------------------------------------
            // |   `  |  1  |  2  |  3  |  4  |  5  |     |  6  |  7  |  8  |  9  |  0  | BKSP |
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |     |  Y  |  U  |  I  |  O  |  P  |  \   |
            // | CAPS |  A  |  S  |  D  |  F  |  G  |     |  H  |  J  |  K  |  L  |  ;  |  ENT |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |     |  N  |  M  |  ,  |  .  |  /  | APOS |
            // | CTRL | ALT | GUI | SPC | SPC | SPC |     | SPC | LOW |LARW |DARW |UARW | RARW |

            bindings = <
&kp GRAVE         &kp N1          &kp N2             &kp N3             &kp N4  &kp N5       &kp N6     &kp N7  &kp N8         &kp N9    &kp N0    &bspc_del
&kp TAB           &kp Q           &kp W              &kp E              &kp R   &kp T        &kp Y      &kp U   &kp I          &kp O     &kp P     &kp BSLH
&mt ESC LEFT_GUI  &kp A           &kp S              &kp D              &kp F   &kp G        &kp H      &kp J   &kp K          &kp L     &kp SEMI  &kp SQT
&kp LSHFT         &kp Z           &kp X              &kp C              &kp V   &kp B        &kp N      &kp M   &kp COMMA      &kp DOT   &kp FSLH  &kp ENTER
&mo 2             &mt LCTRL LPAR  &mt LEFT_ALT LBKT  &mt LEFT_GUI LBRC  &mo 1   &kp LSHFT    &kp SPACE  &mo 1   &kp RIGHT_GUI  &kp DARW  &kp UARW  &kp RCTRL
            >;
        };

        lower {
            // ------------------------------------------------------------------------------------------------------------
            // |       |  BT1  |  BT2  |  BT3  |  BT4  |  BT5  |          |       |       |       |       |       | BTCLR |
            // |       |       |       |       |       |       |          |       |       |       |       |       |       |
            // |       |       |       | LPAR  | RPAR  |       |          |       | LBKT  | RBKT  |       |       |       |
            // |       |       |       |       |       |       |          |       |       |       |       |       |       |

            bindings = <
&trans  &kp F1  &kp F2  &kp F3      &kp F4            &kp F5        &kp F6    &kp F7    &kp F8  &kp F9     &kp F10  &bt BT_CLR
&trans  &trans  &trans  &trans      &kp C_VOL_UP      &trans        &kp HOME  &trans    &trans  &kp END    &kp F11  &trans
&trans  &trans  &trans  &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp F12  &trans
&trans  &trans  &trans  &trans      &kp C_VOL_DN      &trans        &trans    &trans    &trans  &trans     &trans   &trans
            >;
        };

        raise {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};

// vi: ft=dts textwidth=0 noautoindent

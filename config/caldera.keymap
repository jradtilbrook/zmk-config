#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&lt {
    quick-tap-ms = <200>;
    flavor = "balanced";
};

&sk {
    quick-release;
    release-after-ms = <400>;
};

&sl { release-after-ms = <400>; };

/ {
    macros {
        php_arrow: php_arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp GT>;
            label = "PHP_ARROW";
        };

        php_array: php_array {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GT>;
            label = "PHP_ARRAY";
        };

        emoji_react: emoji_react {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp PLUS &kp COLON>;
            label = "EMOJI_REACT";
        };
    };

    behaviors {
        bspc_del: bspc_del {
            compatible = "zmk,behavior-mod-morph";
            label = "BSPC_DEL";
            bindings = <&kp BACKSPACE>, <&kp DEL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        cmt: cmt {
            compatible = "zmk,behavior-hold-tap";
            label = "CMT";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <200>;
            hold-while-undecided;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp GRAVE      &kp N1           &kp N2              &kp N3              &kp N4  &kp N5       &kp N6     &kp N7  &kp N8               &kp N9               &kp N0           &bspc_del
&kp TAB        &kp Q            &kp W               &kp E               &kp R   &kp T        &kp Y      &kp U   &kp I                &kp O                &kp P            &kp BSLH
&cmt LGUI ESC  &kp A            &kp S               &kp D               &kp F   &kp G        &kp H      &kp J   &kp K                &kp L                &kp SEMI         &kp SQT
&kp LSHFT      &kp Z            &kp X               &kp C               &kp V   &kp B        &kp N      &kp M   &kp COMMA            &kp DOT              &kp FSLH         &kp ENTER
&mo 2          &cmt LCTRL LPAR  &cmt LEFT_ALT LBKT  &cmt LEFT_GUI LBRC  &mo 1   &kp LSHFT    &kp SPACE  &mo 1   &cmt RIGHT_GUI RBRC  &cmt RIGHT_ALT RBKT  &cmt RCTRL RPAR  &none
            >;
        };

        lower {
            bindings = <
&trans  &kp F1  &kp F2  &kp F3      &kp F4            &kp F5        &kp F6    &kp F7    &kp F8  &kp F9     &kp F10  &bt BT_CLR
&trans  &trans  &trans  &trans      &kp C_VOL_UP      &trans        &kp HOME  &trans    &trans  &kp END    &kp F11  &trans
&trans  &trans  &trans  &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp F12  &trans
&trans  &trans  &trans  &trans      &kp C_VOL_DN      &kp K_MUTE    &trans    &trans    &trans  &trans     &trans   &trans
&trans  &trans  &trans  &trans      &trans            &trans        &trans    &trans    &trans  &trans     &trans   &trans
            >;
        };

        raise {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans      &trans     &trans     &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans      &trans     &trans     &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &php_arrow  &kp MINUS  &kp EQUAL  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &php_array  &kp UNDER  &kp PLUS   &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans      &trans     &trans     &trans  &trans  &trans
            >;
        };

        adjust {
            bindings = <
&bootloader  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4      &none  &none  &none  &none  &none  &bootloader
&sys_reset   &none         &none         &none         &none         &bt BT_CLR_ALL    &none  &none  &none  &none  &none  &sys_reset
&none        &none         &none         &none         &none         &none             &none  &none  &none  &none  &none  &none
&none        &none         &none         &none         &none         &none             &none  &none  &none  &none  &none  &none
&none        &none         &none         &none         &none         &none             &none  &none  &none  &none  &none  &none
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};

// vi: ft=dts textwidth=0 noautoindent
